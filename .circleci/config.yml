version: 2.1

orbs:
  versioning: kollex/versioning@1.0.0


jobs:
  versiona:
    docker:
      - image: circleci/python:3.6-stretch
    steps:
      # Move the repository code to our home directory in the CircleCI build
      - checkout
      # Add deployment key fingerprint for CircleCI to use for a push
      - add_ssh_keys:
          fingerprints:
            - "1f:cc:12:f5:25:e7:cc:3d:fb:3e:1e:f9:44:47:29:b3"
            #- "0d:c6:2b:93:38:34:5b:88:3f:2e:5c:c3:6f:46:a4:a5"
      # Add the mirror repository as a git remote
      ##- run: git clone git@github.com:cjcuesta/argocd-helloworld.git
      ##- checkout
      - versioning/define_version
      - versioning/print_version
      - versioning/print_docker_tag 
      - run: echo $DOCKER_TAG
      - run: echo $VERSION
      - run: ls -l 
      - run: git config user.email "cjcuesta@gmail.com"
      - run: echo "hola mundo 2"      
      - run: git config user.name "cjcuesta"
      - run: git checkout main
      #- run: git clone git@github.com:cjcuesta/argocd-helloworld.git
      #- run: ls -la argocd-helloworld/
      #- run: cd argocd-helloworld
      #- AQUi fue
      - run: echo "cjcuesta/ms:$DOCKER_TAG" >> nuevo.txt
      - run: ls -la 
      #- run: ls -la argocd-helloworld/
      - run: git add .
      - run: git commit -m "$DOCKER_TAG"      
      - run: git push

  build:
    working_directory: ~/app
    machine:
      image: ubuntu-2204:2022.04.2
    environment: 
      IMAGE_NAME: cjcuesta/ms
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Visualizacion del jar
        command: ls -l ~/app/
    - run: 
        name: Publish Docker Image to Docker Hub
        command: |
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker build -t $IMAGE_NAME:v2 .
          docker push $IMAGE_NAME:v2        

  test:
    working_directory: ~/app
    docker:
      - image: maven 
    steps: 
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: 
          name: generacion 
          command: mvn clean package
      - run: 
          name: test 
          command: mvn test
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar -Dsonar.projectKey=cjcuesta_cici-java          
      - run:
          name: Visualizacion del jar
          command: ls -l ~/app/target/
      - persist_to_workspace:
          root: .
          paths: ./


workflows:
  my-workflow:
    when: << pipeline.git.tag >>  
    jobs:
      - versiona:
          filters:
            tags:
              only: /.*/

#      - test:
#          context: SonarCloud
#      - build:
#          requires:
#            - test 

